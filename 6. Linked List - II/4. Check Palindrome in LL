class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode* p=NULL;
        ListNode* tp = head;
        ListNode* n = head->next;
        int c=0;
        while(tp){
           c++;
           tp=tp->next;
        }
        tp=head;
        if(c==1) return true;
        if(c==2 && tp->val==tp->next->val){
           return true;
        }
        else if(c==2 && tp->val!=tp->next->val){
            return false;
        } 
        if(c==3 && tp->val == tp->next->next->val){
            return true;
        }
        else if(c==3 && tp->val != tp->next->next->val){
            return false;
        }
        if(c%2==0){
            int a = c/2;
            while(a--){
                tp->next=p;
                p=tp;
                tp=n;
                n=n->next;
            }
            ListNode* t1=p;
            a=c/2;
            while(tp){
                if(t1->val!=tp->val){
                    return false;
                }
                t1=t1->next;
                tp=tp->next;
            }
            return true;
        }
        else{
            int a = c/2;
            while(a--){
                tp->next=p;
                p=tp;
                tp=n;
                n=n->next;
            }
            ListNode* t1=p;
            a=c/2;
            while(t1){
                if(t1->val!=n->val){
                    return false;
                }
                t1=t1->next;
                n=n->next;
            }
            return true;
        }
        return false;
    }
};

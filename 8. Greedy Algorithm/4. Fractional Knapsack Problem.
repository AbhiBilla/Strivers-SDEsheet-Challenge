#include <bits/stdc++.h> 

bool comp(const pair<int,int> &a, const pair<int,int> &b){
    double p = (double)a.second/(double)a.first;
    double q = (double)b.second/(double)b.first;
    return p>q;
}

double maximumValue (vector<pair<int, int>>& items, int n, int w)
{
    // Write your code here.
    // ITEMS contains {weight, value} pairs.
    sort(items.begin(),items.end(),comp);
    //cout<<items[0].first<<endl;
    double ans = 0;
    int i=0;
    while(w>0 && i<n){
        if(items[i].first<=w){
            w-=items[i].first;
            ans+=items[i].second;
        }
        else{
            double tp = (items[i].second)/(items[i].first*1.0);
            ans+=tp*w;
            w=0;
        }
        i++;
    }
    return ans;

}
